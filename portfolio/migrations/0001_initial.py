# Generated by Django 5.2.6 on 2025-09-08 13:51

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=300)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('replied', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=200)),
                ('degree_type', models.CharField(choices=[('msc', 'Master of Science'), ('bsc', 'Bachelor of Science'), ('a_level', 'A Levels'), ('gcse', 'GCSEs'), ('certification', 'Certification'), ('course', 'Online Course')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('grade', models.CharField(blank=True, max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('technologies_used', models.TextField(blank=True, help_text='Comma-separated list')),
                ('is_current', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Education',
                'ordering': ['-start_date', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
                ('skills_gained', models.TextField(blank=True, help_text='Comma-separated list')),
                ('is_current', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-start_date', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('bio', models.TextField()),
                ('profile_image', models.ImageField(blank=True, upload_to='profile/')),
                ('github_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('cv_file', models.FileField(blank=True, upload_to='documents/')),
                ('typing_texts', models.TextField(blank=True, help_text='Comma-separated phrases for typing animation')),
            ],
            options={
                'verbose_name': 'Personal Information',
                'verbose_name_plural': 'Personal Information',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('short_description', models.CharField(max_length=300)),
                ('detailed_description', models.TextField()),
                ('category', models.CharField(choices=[('academic', 'Academic'), ('personal', 'Personal'), ('professional', 'Professional'), ('open_source', 'Open Source')], max_length=20)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('in_progress', 'In Progress'), ('planned', 'Planned'), ('archived', 'Archived')], default='completed', max_length=20)),
                ('technologies', models.TextField(help_text='Comma-separated list of technologies')),
                ('github_url', models.URLField(blank=True)),
                ('live_demo_url', models.URLField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='projects/')),
                ('created_date', models.DateField()),
                ('featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-featured', '-created_date', 'order'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.CharField(default='James Andrew - CV', max_length=200)),
                ('site_description', models.TextField(default='Computer Science Graduate Portfolio')),
                ('theme_color', models.CharField(default='#007bff', max_length=7)),
                ('enable_dark_mode', models.BooleanField(default=True)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('programming', 'Programming Languages'), ('framework', 'Frameworks & Libraries'), ('database', 'Databases'), ('tool', 'Tools & Technologies'), ('soft_skill', 'Soft Skills'), ('methodology', 'Methodologies')], max_length=20)),
                ('proficiency', models.IntegerField(choices=[(1, 'Beginner'), (2, 'Novice'), (3, 'Intermediate'), (4, 'Advanced'), (5, 'Expert')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('years_experience', models.FloatField(help_text='Years of experience with this skill', validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True)),
                ('icon_class', models.CharField(blank=True, help_text="CSS class for icon (e.g., 'fab fa-python')", max_length=100)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for skill visualization', max_length=7)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['category', '-proficiency', 'order'],
            },
        ),
    ]
